// <auto-generated />
using System;
using AgendaTelefonica.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AgendaTelefonica.Migrations
{
    [DbContext(typeof(AgendaDBContext))]
    partial class AgendaDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.25")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AgendaTelefonica.Models.Agenda", b =>
                {
                    b.Property<int>("IdAgenda")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NombreAgenda")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("IdAgenda");

                    b.ToTable("Agenda");
                });

            modelBuilder.Entity("AgendaTelefonica.Models.CompaniaTelefonica", b =>
                {
                    b.Property<int?>("IdCompania")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("FK_TelefonoIdTelefono")
                        .HasColumnType("int");

                    b.Property<string>("NombreCompania")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("IdCompania");

                    b.HasIndex("FK_TelefonoIdTelefono");

                    b.ToTable("CompaniaTelefonica");
                });

            modelBuilder.Entity("AgendaTelefonica.Models.Contacto", b =>
                {
                    b.Property<int?>("IdContacto")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("idContacto")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("FK_AgendaIdAgenda")
                        .HasColumnType("int");

                    b.Property<int?>("IdAgenda")
                        .HasColumnType("int");

                    b.Property<int>("IdTelefono")
                        .HasColumnType("int");

                    b.Property<string>("NombreCompleto")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.HasKey("IdContacto");

                    b.HasIndex("FK_AgendaIdAgenda");

                    b.ToTable("Contacto");
                });

            modelBuilder.Entity("AgendaTelefonica.Models.Direccion", b =>
                {
                    b.Property<int?>("IdDireccion")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("idDireccion")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AlturaCalle")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("Calle")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int?>("CodigoPostal")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("FK_ContactoIdContacto")
                        .HasColumnType("int");

                    b.Property<int?>("IdContacto")
                        .HasColumnName("idContacto")
                        .HasColumnType("int");

                    b.Property<string>("Localidad")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Provincia")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("IdDireccion");

                    b.HasIndex("FK_ContactoIdContacto");

                    b.ToTable("Direccion");
                });

            modelBuilder.Entity("AgendaTelefonica.Models.Email", b =>
                {
                    b.Property<int?>("IdEmail")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("idEmail")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CorreoElectronico")
                        .IsRequired()
                        .HasColumnType("varchar(75)")
                        .HasMaxLength(75)
                        .IsUnicode(false);

                    b.Property<int?>("FK_ContactoIdContacto")
                        .HasColumnType("int");

                    b.Property<int>("IdContacto")
                        .HasColumnType("int");

                    b.HasKey("IdEmail");

                    b.HasIndex("FK_ContactoIdContacto");

                    b.ToTable("Email");
                });

            modelBuilder.Entity("AgendaTelefonica.Models.Telefono", b =>
                {
                    b.Property<int?>("IdTelefono")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("idTelefono")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CodigoArea")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("FK_ContactoIdContacto")
                        .HasColumnType("int");

                    b.Property<int?>("IdCompania")
                        .HasColumnType("int");

                    b.Property<int?>("IdContacto")
                        .HasColumnName("idContacto")
                        .HasColumnType("int");

                    b.Property<int?>("Numero")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("Prefijo")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("IdTelefono");

                    b.HasIndex("FK_ContactoIdContacto");

                    b.ToTable("Telefono");
                });

            modelBuilder.Entity("AgendaTelefonica.Models.CompaniaTelefonica", b =>
                {
                    b.HasOne("AgendaTelefonica.Models.Telefono", "FK_Telefono")
                        .WithMany()
                        .HasForeignKey("FK_TelefonoIdTelefono");
                });

            modelBuilder.Entity("AgendaTelefonica.Models.Contacto", b =>
                {
                    b.HasOne("AgendaTelefonica.Models.Agenda", "FK_Agenda")
                        .WithMany()
                        .HasForeignKey("FK_AgendaIdAgenda");
                });

            modelBuilder.Entity("AgendaTelefonica.Models.Direccion", b =>
                {
                    b.HasOne("AgendaTelefonica.Models.Contacto", "FK_Contacto")
                        .WithMany()
                        .HasForeignKey("FK_ContactoIdContacto");
                });

            modelBuilder.Entity("AgendaTelefonica.Models.Email", b =>
                {
                    b.HasOne("AgendaTelefonica.Models.Contacto", "FK_Contacto")
                        .WithMany()
                        .HasForeignKey("FK_ContactoIdContacto");
                });

            modelBuilder.Entity("AgendaTelefonica.Models.Telefono", b =>
                {
                    b.HasOne("AgendaTelefonica.Models.Contacto", "FK_Contacto")
                        .WithMany()
                        .HasForeignKey("FK_ContactoIdContacto");
                });
#pragma warning restore 612, 618
        }
    }
}
